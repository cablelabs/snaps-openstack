# Copyright (c) 2016 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
openstack:
  connections:
    # Note - when http_proxy is set, you must also configure ssh for proxy tunneling on your host.
    - connection:
        name: admin-creds
        username: {{ admin_user }}
        project_name: {{ admin_proj }}
        password: {{ admin_pass }}
        auth_url: {{ auth_url }}
        identity_api_version: {{ id_api_version }}
        proxy_settings:
          host: {{ proxy_host }}
          port: {{ proxy_port }}
          ssh_proxy_cmd: {{ ssh_proxy_cmd }}
  projects:
    - project:
        os_creds_name: admin-creds
        name: os-deploy-proj-{{ build_id }}
        description: Project for Orchestrators
        users: [os-deploy-user-{{ build_id }}, {{ admin_user }}]
  users:
    - user:
        os_creds_name: admin-creds
        name: os-deploy-user-{{ build_id }}
        password: {{ os_user_pass }}
        project_name: os-deploy-proj-{{ build_id }}
        roles: {admin: os-deploy-proj-{{ build_id }}}
  flavors:
    - flavor:
        os_creds_name: admin-creds
        name: os-build-flavor-{{ build_id }}
        ram: 4096
        disk: 80
        vcpus: 2
    - flavor:
        os_creds_name: admin-creds
        name: os-control-flavor-{{ build_id }}
        ram: 16384
        disk: 100
        vcpus: 4
    - flavor:
        os_creds_name: admin-creds
        name: os-compute-flavor-{{ build_id }}
        ram: 8192
        disk: 100
        vcpus: 4
  images:
    - image:
        os_creds_name: admin-creds
        name: snaps-os-image-{{ build_id }}
        format: qcow2
        public: True
        image_user: ubuntu
        download_url: https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
  networks:
    - network:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-ctrl-net-{{ build_id }}
        project_name: os-deploy-proj-{{ build_id }}
        subnets:
          - subnet:
              name: os-ctrl-subnet-{{ build_id }}
              project_name: os-deploy-proj-{{ build_id }}
              cidr: {{ ctrl_ip_prfx }}.0/24
              dns_nameservers: [8.8.8.8]
    - network:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-admin-net-{{ build_id }}
        project_name: os-deploy-proj-{{ build_id }}
        subnets:
          - subnet:
              name: os-admin-subnet-{{ build_id }}
              project_name: os-deploy-proj-{{ build_id }}
              cidr: {{ admin_ip_prfx }}.0/24
              start: {{ admin_ip_prfx }}.2
              end: {{ admin_ip_prfx }}.9
              gateway_ip: none
              dns_nameservers: []
    - network:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-priv-net-{{ build_id }}
        project_name: os-deploy-proj-{{ build_id }}
        subnets:
          - subnet:
              name: os-priv-subnet-{{ build_id }}
              project_name: os-deploy-proj-{{ build_id }}
              cidr: {{ priv_ip_prfx }}.0/24
              start: {{ priv_ip_prfx }}.2
              end: {{ priv_ip_prfx }}.9
              gateway_ip: none
              enable_dhcp: False
              dns_nameservers: []
    - network:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-public-net-{{ build_id }}
        project_name: os-deploy-proj-{{ build_id }}
        subnets:
          - subnet:
              name: os-public-subnet-{{ build_id }}
              project_name: os-deploy-proj-{{ build_id }}
              cidr: {{ pub_ip_prfx }}.0/24
              start: {{ pub_ip_prfx }}.2
              end: {{ pub_ip_prfx }}.9
              enable_dhcp: False
              dns_nameservers: [8.8.8.8]
  routers:
    - router:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-ctrl-router-{{ build_id }}
        external_gateway: {{ ext_net }}
        internal_subnets:
          - os-ctrl-subnet-{{ build_id }}
    - router:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-deploy-router-{{ build_id }}
        external_gateway: {{ ext_net }}
        internal_subnets:
          - os-public-subnet-{{ build_id }}
  keypairs:
    - keypair:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-deploy-build-kp-{{ build_id }}
        public_filepath: {{ build_kp_pub_path }}
        private_filepath: {{ build_kp_priv_path }}
        delete_on_clean: True
  security_groups:
    - security_group:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-deploy-build-sg-{{ build_id }}
        rules:
          - direction: ingress
            protocol: icmp
          - direction: ingress
            protocol: tcp
            port_range_min: 22
            port_range_max: 22
          - direction: egress
            protocol: tcp
            port_range_min: 22
            port_range_max: 22
  volumes:
    - volume:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-deploy-vol1-{{ build_id }}
        size: 50
    - volume:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-deploy-vol2-{{ build_id }}
        size: 50
    - volume:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-deploy-vol3-{{ build_id }}
        size: 50
  instances:
    # TODO - Improve NIC config. see https://cloudinit.readthedocs.io/en/latest/topics/network-config-format-v2.html#network-config-v2
    - instance:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: build-os-vm-{{ build_id }}
        flavor: os-build-flavor-{{ build_id }}
        imageName: snaps-os-image-{{ build_id }}
        keypair_name: os-deploy-build-kp-{{ build_id }}
        security_group_names: [os-deploy-build-sg-{{ build_id }}]
        cloud_init_timeout: 1000
        userdata: |
          #cloud-config
          packages:
            - python
          password: {{ node_host_password }}
          chpasswd: { expire: False }
          ssh_pwauth: True
          bootcmd:
            - [sh, -c, "echo 'auto ens4' > /etc/network/interfaces.d/ens4.cfg"]
            - [sh, -c, "echo '  iface ens4 inet static' >> /etc/network/interfaces.d/ens4.cfg"]
            - [sh, -c, "echo '  address {{ admin_ip_prfx }}.10' >> /etc/network/interfaces.d/ens4.cfg"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces.d/ens4.cfg"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces.d/ens4.cfg"]
            - [sh, -c, "echo 'auto ens5' > /etc/network/interfaces.d/ens5.cfg"]
            - [sh, -c, "echo '  iface ens5 inet static' >> /etc/network/interfaces.d/ens5.cfg"]
            - [sh, -c, "echo '  address {{ priv_ip_prfx }}.10' >> /etc/network/interfaces.d/ens5.cfg"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces.d/ens5.cfg"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces.d/ens5.cfg"]
            - [sh, -c, "echo 'auto ens6' > /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "echo '  iface ens6 inet static' >> /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "echo '  address {{ pub_ip_prfx }}.10' >> /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "echo '  gateway {{ pub_ip_prfx }}.1' >> /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "echo '  dns-nameservers 8.8.8.8' >> /etc/network/interfaces.d/ens6.cfg"]
            - [sh, -c, "sudo systemctl restart networking"]
        ports:
          - port:
              name: build-ctrl-port-{{ build_id }}
              network_name: os-ctrl-net-{{ build_id }}
          - port:
              name: build-admin-port-{{ build_id }}
              network_name: os-admin-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-admin-subnet-{{ build_id }}
                  ip: {{ admin_ip_prfx }}.10
          - port:
              name: build-priv-port-{{ build_id }}
              network_name: os-priv-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-priv-subnet-{{ build_id }}
                  ip: {{ priv_ip_prfx }}.10
          - port:
              name: build-pub-port-{{ build_id }}
              network_name: os-public-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.10
        floating_ips:
          - floating_ip:
              name: fip1
              port_name: build-ctrl-port-{{ build_id }}
              router_name: os-ctrl-router-{{ build_id }}
    - instance:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-node-1-{{ build_id }}
        flavor: os-control-flavor-{{ build_id }}
        imageName: snaps-os-image-{{ build_id }}
        security_group_names: [os-deploy-build-sg-{{ build_id }}]
        cloud_init_timeout: 1000
        volume_names:
          - os-deploy-vol1-{{ build_id }}
        userdata: |
          #cloud-config
          chpasswd:
            list: |
              root:{{ node_host_password }}
            expire: False
          ssh_pwauth: True
          packages:
            - python
          runcmd:
            - [sh, -c, "mv /etc/network/interfaces /etc/network/interfaces.orig"]
            - [sh, -c, "echo 'auto lo' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'iface lo inet loopback' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ admin_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ admin_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ admin_ip_prfx }}.11' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ priv_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ priv_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ priv_ip_prfx }}.11' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ pub_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ pub_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ pub_ip_prfx }}.11' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  gateway {{ pub_ip_prfx }}.1' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  dns-nameservers 8.8.8.8' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'network: {config: disabled}' > /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg"]
            - ip addr flush {{ admin_iface }}
            - systemctl restart networking
            - apt install -y python
            - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin yes/' /etc/ssh/sshd_config
            - systemctl restart ssh
        ports:
          - port:
              name: os-deploy-admin-port-1-{{ build_id }}
              network_name: os-admin-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-admin-subnet-{{ build_id }}
                  ip: {{ admin_ip_prfx }}.11
                - subnet_name: os-admin-subnet-{{ build_id }}
                  ip: {{ admin_ip_prfx }}.30
          - port:
              name: os-deploy-priv-port-1-{{ build_id }}
              network_name: os-priv-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-priv-subnet-{{ build_id }}
                  ip: {{ priv_ip_prfx }}.11
          - port:
              name: os-deploy-pub-port-1-{{ build_id }}
              network_name: os-public-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.11
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.30
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.51
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.52
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.53
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.54
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.55
    - instance:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-node-2-{{ build_id }}
        flavor: os-compute-flavor-{{ build_id }}
        imageName: snaps-os-image-{{ build_id }}
        security_group_names: [os-deploy-build-sg-{{ build_id }}]
        cloud_init_timeout: 1000
        volume_names:
          - os-deploy-vol2-{{ build_id }}
        userdata: |
          #cloud-config
          chpasswd:
            list: |
              root:{{ node_host_password }}
            expire: False
          ssh_pwauth: True
          packages:
            - python
          runcmd:
            - [sh, -c, "mv /etc/network/interfaces /etc/network/interfaces.orig"]
            - [sh, -c, "echo 'iface lo inet loopback' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ admin_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ admin_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ admin_ip_prfx }}.12' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ priv_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ priv_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ priv_ip_prfx }}.12' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mut 1400' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ pub_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ pub_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ pub_ip_prfx }}.12' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  gateway {{ pub_ip_prfx }}.1' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  dns-nameservers 8.8.8.8' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces"]
            - ip addr flush {{ admin_iface }}
            - systemctl restart networking
            - apt install -y python
            - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin yes/' /etc/ssh/sshd_config
            - systemctl restart ssh
        ports:
          - port:
              name: os-deploy-admin-port-2-{{ build_id }}
              network_name: os-admin-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-admin-subnet-{{ build_id }}
                  ip: {{ admin_ip_prfx }}.12
          - port:
              name: os-deploy-priv-port-2-{{ build_id }}
              network_name: os-priv-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-priv-subnet-{{ build_id }}
                  ip: {{ priv_ip_prfx }}.12
          - port:
              name: os-deploy-pub-port-2-{{ build_id }}
              network_name: os-public-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.12
    - instance:
        os_user:
          name: os-deploy-user-{{ build_id }}
          project_name: os-deploy-proj-{{ build_id }}
        name: os-node-3-{{ build_id }}
        flavor: os-compute-flavor-{{ build_id }}
        imageName: snaps-os-image-{{ build_id }}
        security_group_names: [os-deploy-build-sg-{{ build_id }}]
        cloud_init_timeout: 1000
        volume_names:
          - os-deploy-vol3-{{ build_id }}
        userdata: |
          #cloud-config
          chpasswd:
            list: |
              root:{{ node_host_password }}
            expire: False
          ssh_pwauth: True
          packages:
            - python
          runcmd:
            - [sh, -c, "mv /etc/network/interfaces /etc/network/interfaces.orig"]
            - [sh, -c, "echo 'iface lo inet loopback' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ admin_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ admin_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ admin_ip_prfx }}.13' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ priv_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ priv_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ priv_ip_prfx }}.13' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mut 1400' >> /etc/network/interfaces"]
            - [sh, -c, "echo 'auto {{ pub_iface }}' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  iface {{ pub_iface }} inet static' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  address {{ pub_ip_prfx }}.13' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  netmask 255.255.255.0' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  gateway {{ pub_ip_prfx }}.1' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  dns-nameservers 8.8.8.8' >> /etc/network/interfaces"]
            - [sh, -c, "echo '  mtu 1400' >> /etc/network/interfaces"]
            - ip addr flush {{ admin_iface }}
            - systemctl restart networking
            - apt install -y python
            - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin yes/' /etc/ssh/sshd_config
            - systemctl restart ssh
        ports:
          - port:
              name: os-deploy-admin-port-3-{{ build_id }}
              network_name: os-admin-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-admin-subnet-{{ build_id }}
                  ip: {{ admin_ip_prfx }}.13
          - port:
              name: os-deploy-priv-port-3-{{ build_id }}
              network_name: os-priv-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-priv-subnet-{{ build_id }}
                  ip: {{ priv_ip_prfx }}.13
          - port:
              name: os-deploy-pub-port-3-{{ build_id }}
              network_name: os-public-net-{{ build_id }}
              ip_addrs:
                - subnet_name: os-public-subnet-{{ build_id }}
                  ip: {{ pub_ip_prfx }}.13
ansible:
  # Install and configure snaps-boot to build host
  - playbook_location: {{ local_snaps_openstack_dir }}/ci/playbooks/deploy_os.yaml
    hosts:
      - build-os-vm-{{ build_id }}
    variables:
      src_copy_dir:
        type: string
        value: {{ src_copy_dir }}
      admin_ip_1:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-admin-port-1-{{ build_id }}
        port_value: ip_address
      admin_mac_1:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-admin-port-1-{{ build_id }}
        port_value: mac_address
      private_ip_1:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-priv-port-1-{{ build_id }}
        port_value: ip_address
      private_mac_1:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-priv-port-1-{{ build_id }}
        port_value: mac_address
      public_ip_1:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-pub-port-1-{{ build_id }}
        port_value: ip_address
      public_mac_1:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-pub-port-1-{{ build_id }}
        port_value: mac_address
      admin_ip_2:
        type: port
        vm_name: os-node-2-{{ build_id }}
        port_name: os-deploy-admin-port-2-{{ build_id }}
        port_value: ip_address
      admin_mac_2:
        type: port
        vm_name: os-node-2-{{ build_id }}
        port_name: os-deploy-admin-port-2-{{ build_id }}
        port_value: mac_address
      private_ip_2:
        type: port
        vm_name: os-node-2-{{ build_id }}
        port_name: os-deploy-priv-port-2-{{ build_id }}
        port_value: ip_address
      private_mac_2:
        type: port
        vm_name: os-node-2-{{ build_id }}
        port_name: os-deploy-priv-port-2-{{ build_id }}
        port_value: mac_address
      public_ip_2:
        type: port
        vm_name: os-node-2-{{ build_id }}
        port_name: os-deploy-pub-port-2-{{ build_id }}
        port_value: ip_address
      public_mac_2:
        type: port
        vm_name: os-node-2-{{ build_id }}
        port_name: os-deploy-pub-port-2-{{ build_id }}
        port_value: mac_address
      admin_ip_3:
        type: port
        vm_name: os-node-3-{{ build_id }}
        port_name: os-deploy-admin-port-3-{{ build_id }}
        port_value: ip_address
      admin_mac_3:
        type: port
        vm_name: os-node-3-{{ build_id }}
        port_name: os-deploy-admin-port-3-{{ build_id }}
        port_value: mac_address
      private_ip_3:
        type: port
        vm_name: os-node-3-{{ build_id }}
        port_name: os-deploy-priv-port-3-{{ build_id }}
        port_value: ip_address
      private_mac_3:
        type: port
        vm_name: os-node-3-{{ build_id }}
        port_name: os-deploy-priv-port-3-{{ build_id }}
        port_value: mac_address
      public_ip_3:
        type: port
        vm_name: os-node-3-{{ build_id }}
        port_name: os-deploy-pub-port-3-{{ build_id }}
        port_value: ip_address
      public_mac_3:
        type: port
        vm_name: os-node-3-{{ build_id }}
        port_name: os-deploy-pub-port-3-{{ build_id }}
        port_value: mac_address
      public_gateway:
        type: network
        network_name: os-public-net-{{ build_id }}
        subnet_name: os-public-subnet-{{ build_id }}
        value: gateway_ip
      public_cidr:
        type: network
        network_name: os-public-net-{{ build_id }}
        subnet_name: os-public-subnet-{{ build_id }}
        value: cidr
      ip_pool_start:
        type: string
        value: {{ pub_ip_prfx }}.51
      ip_pool_end:
        type: string
        value: {{ pub_ip_prfx }}.55
      internal_vip_address:
        type: string
        value: {{ admin_ip_prfx }}.30
      external_vip_address:
        type: string
        value: {{ pub_ip_prfx }}.30
      admin_iface:
        type: string
        value: {{ admin_iface }}
      priv_iface:
        type: string
        value: {{ priv_iface }}
      pub_iface:
        type: string
        value: {{ pub_iface }}
      deployment_yaml_path:
        type: string
        value: {{ deployment_yaml_target_path }}
      node_host_pass:
        type: string
        value: {{ node_host_password }}
      host_memory_mb:
        type: string
        value: 16384
      isolcpus:
        type: string
        value: 0-15
      kolla_registry_port:
        type: string
        value: 4000

  # Execute tests
  - playbook_location: {{ local_snaps_openstack_dir }}/ci/playbooks/run_tests.yaml
    hosts:
      - build-os-vm-{{ build_id }}
    variables:
      ctrl_admin_ip:
        type: port
        vm_name: os-node-1-{{ build_id }}
        port_name: os-deploy-admin-port-1-{{ build_id }}
        port_value: ip_address
